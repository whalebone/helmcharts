apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wb-resolver
  name: wb-resolver
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicacount }}
  selector: 
    matchLabels:
      app: wb-resolver
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: wb-resolver
    spec:
      containers:
      # resolver
      - name: resolver
        env:
        - name: LMDB_ROOT
          value: /var/whalebone/lmdb
        - name: LOG_CONTENT
          value: '127.0.0.1'
          # value: 'logcat.resolver:4000'
        - name: LOG_THREAT
          value: '127.0.0.1'
          # value: 'logcat.resolver'
        - name: SINKIP
          value: 159.100.251.128
        - name: SINKIPV6
          value: '::1'
        - name: SINKTTL
          value: '1'
        - name: CACHE_SIZE
          value: '100'
###
        - name: LMDB_VERSION
          value: v5
        image: {{ .Values.resolver.image }}:{{ .Values.resolver.tag }}
        volumeMounts:
        - mountPath: "/var/lib/kres/cache"
          name: cache
        - mountPath: "/etc/kres/"
          name: kresconf
        - mountPath: "/var/whalebone"
          name: var-whalebone
        - mountPath: "/var/log/whalebone"
          name: var-log-whalebone
        - mountPath: "/tty/control"
          name: var-lib-kres-tty
        # - mountPath: "/etc/kres"
        #   name: etc-whalebone-kres
        ports:
        - containerPort: 53
     # kresman     
      - name: kresman
        env:
        - name: CA_CRT_BASE64
          value: {{ .Values.certificates.ca_crt_base64 }}
        - name: CLIENT_CRT_BASE64
          value: {{ .Values.certificates.client_crt_base64 }}
        - name: CLIENT_KEY_BASE64
          value: {{ .Values.certificates.client_key_base64 }} 
        - name:  RESOLVERAPI_URL
          value: https://resolverapi.{{ .Values.deployment_id }}whalebone.io:443/sinkit/rest/protostream/resolvercache
        - name:  GRPC_INSECURE_ENDPOINT
          value: '127.0.0.1:8080'
        - name:  GRPC_SERVER_TYPE
          value: unix
        - name:  GRPC_SERVER_SOCKET
          value: /var/whalebone/kresman.sock
        - name:  LMDB_VERSION
          value: v5
        - name:  SINKHOLE_ENABLED
          value: "false"


        image: {{ .Values.kresman.image }}:{{ .Values.kresman.tag }}
        volumeMounts:
        - mountPath: "/var/whalebone"
          name: var-whalebone
        - mountPath: "/var/log/whalebone"
          name: var-log-whalebone
     
       # logcat
      - name: logcat
        env:
        - name: FILENAME
          value: whalebone.log
        - name: HOST
          value: '127.0.0.1:4000'
        - name: PATH_OUT
          value: /var/log/whalebone/
        image: {{ .Values.logcat.image }}:{{ .Values.logcat.tag }}
        volumeMounts:
        - mountPath: "/var/log/whalebone"
          name: var-log-whalebone
        ports:
        - containerPort: 4000
     # logcat-content   
      - name: logcat-content
        env:
        - name: FILENAME
          value: content.log
        - name: HOST
          value: '127.0.0.1:4001'
        - name: PATH_OUT
          value: /var/log/whalebone/
        image: {{ .Values.logcat_content.image }}:{{ .Values.logcat_content.tag }}
        volumeMounts:
        - mountPath: "/var/log/whalebone"
          name: var-log-whalebone
        ports:
        - containerPort: 4001
     # logstream   
      - name: logstream
        env:
        - name: CA_CRT_BASE64
          value: {{ .Values.certificates.ca_crt_base64 }}
        - name: CLIENT_CRT_BASE64
          value: {{ .Values.certificates.client_crt_base64 }}
        - name: CLIENT_KEY_BASE64
          value: {{ .Values.certificates.client_key_base64 }}
        - name: LOGSTREAM_HOSTS
          value: '["logger.{{ .Values.deployment_id }}whalebone.io:443"]'
        image: {{ .Values.logstream.image }}:{{ .Values.logstream.tag }}
        volumeMounts:
        - mountPath: "/var/log/whalebone"
          name: var-log-whalebone

    # logrotate
      - name: logrotate
        env:
        - name: LOGROTATE_COMPRESSION
          value: compress
        - name: LOGROTATE_COPIES
          value: '5'
        - name: LOGROTATE_CRONSCHEDULE
          value: '0 */10 * * * *'
        - name: LOGROTATE_DELAYCOMPRESS
          value: 'false'
        - name: LOGROTATE_SIZE
          value: '1G'
        - name: LOGS_DIRECTORIES
          value: '/var/log/whalebone'
        image: {{ .Values.logcat.image }}:{{ .Values.logcat.tag }}
        volumeMounts:
        - mountPath: "/var/log/whalebone"
          name: var-log-whalebone
 
         # dnstag
      - name: dnstag
        env:
        - name: DNSTAG_LRU_CACHE_SIZE
          value: 2000000
        image: {{ .Values.dnstag.image }}:{{ .Values.dnstag.tag }}
        volumeMounts:
        - mountPath: "/var/log/whalebone"
          name: var-log-whalebone
        - mountPath: "/var/whalebone/dnstap"
          name: var-whalebone-dnstap
        - mountPath: "/var/whalebone"
          name: var-whalebone
        - mountPath: "/var/whalebone/dnstag/db"
          name: var-whalebone-db
        - mountPath: "/var/whalebone/lmdb"
          name: var-whalebone-lmdb
        # command: ['/go/bin/cmd', '-b', '-u=/var/whalebone/dnstap/dnstap.sock', '-w', '/var/log/whalebone/passivedns.log']


 
      # consumer
      - name: consumer
        env:
        - name: CA_CRT_BASE64
          value: {{ .Values.certificates.ca_crt_base64 }}
        - name: CLIENT_CRT_BASE64
          value: {{ .Values.certificates.client_crt_base64 }}
        - name: CLIENT_KEY_BASE64
          value: {{ .Values.certificates.client_key_base64 }}       
        - name: KAFKA_BROKER
          value: stream.{{ .Values.deployment_id }}whalebone.io
        - name: GRPC_CLIENT_TYPE
          value: unix
        - name: GRPC_CLIENT_SOCKET
          value: /var/whalebone/kresman.sock
        - name: LMDB_VERSION
          value: v5
        - name: HTTP_PORT
          value: 8888
        image: {{ .Values.consumer.image }}:{{ .Values.consumer.tag }}

      # lr-agent
      - name: lr-agent
        env:
        - name: CA_CRT_BASE64
          value: {{ .Values.certificates.ca_crt_base64 }}
        - name: CLIENT_CRT_BASE64
          value: {{ .Values.certificates.client_crt_base64 }}
        - name: CLIENT_KEY_BASE64
          value: {{ .Values.certificates.client_key_base64 }}       
        - name: DNS_LIFETIME
          value: '3'
        - name: DNS_TIMEOUT
          value: '3'
        - name: PROXY_ADDRESS
          value: 'wss://agentapi.{{ .Values.deployment_id }}whalebone.io:443/wsproxy/ws'
        - name: RESOLVER_TRANSLATION_CHECK_METHOD
          value: trace
        - name: UPGRADE_SLEEP
          value: '30'
        - name: WEBSOCKET_LOGGING
          value: '10'
        - name: DEPLOYMENT_TYPE
          value: 'kubernetes'
## new ENCS
        - name: KRESMAN_API_FORMAT
          value: v2
        - name: KRESMAN_LISTENER
          value: 'http://localhost:8080'
        - name: UPGRADE_MEMORY_THRESHOLD
          value: 0.8
        image: {{ .Values.lr_agent.image }}:{{ .Values.lr_agent.tag }}
        volumeMounts:
        - mountPath: "/etc/whalebone/sysinfo/"
          name: var-log-whalebone
        - mountPath: "/etc/whalebone/tty/"
          name: var-lib-kres-tty
        - mountPath: "/etc/whalebone/etc"
          name: etc-whalebone

      volumes:
      - name: cache
        emptyDir:
          medium: Memory
          sizeLimit: 1Gi
      - name: kresconf
        # emptyDir: {}
        configMap:
          name: kresconf
      - name: var-whalebone
        emptyDir: {}
      - name: var-log-whalebone
        emptyDir: {}
      - name: var-lib-kres-tty
        emptyDir: {}
      - name: etc-whalebone
        emptyDir: {}
      - name: var-whalebone-dnstap
        emptyDir: {}
      - name: var-whalebone-db
        emptyDir: {}
      - name: var-whalebone-lmdb

      # - name: etc-whalebone-kres
      #   emptyDir: {}
      # imagePullSecrets: 
      # - name: harbor-pull-cred
      # affinity:
      #   nodeAffinity:
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #     - weight: 1
      #       preference:
      #         matchExpressions:
      #         - key: node-preemtible
      #           operator: In
      #           values:
      #           - "yes"
      # restartPolicy: Always

    # blockingpage
      - name: blockingpage
        env:
        - name: GRPC_GATEWAY_ENDPOINT
          value: '127.0.0.1:8081'
        - name: GRPC_INSECURE_ENDPOINT
          value: '127.0.1.1:8091'
        - name: GRPC_CLIENT_TYPE
          value: unix
        - name: GRPC_CLIENT_SOCKET
          value: /var/whalebone/kresman.sock
        - name: WEB_PORT
          value: 80
        - name: WEB_PORT_SECURE
          value: 443
        - name: REDIRECT_TO
          value: http
        - name: LMDB_VERSION
          value: v5
        image: {{ .Values.blockingpage.image }}:{{ .Values.blockingpage.tag }}
        volumeMounts:
        - mountPath: "/var/log/whalebone"
          name: var-log-whalebone



    blocking-page:
        image: 'harbor.whalebone.io/resolver/k2web:1.2.12'
        labels:
            blocking-page: 1.2.12
        environment:
            GRPC_GATEWAY_ENDPOINT: '127.0.0.1:8081'
            GRPC_INSECURE_ENDPOINT: '127.0.1.1:8091'
            GRPC_CLIENT_TYPE: unix
            GRPC_CLIENT_SOCKET: /var/whalebone/kresman.sock
            WEB_PORT: 80
            WEB_PORT_SECURE: 443
            REDIRECT_TO: http
            LMDB_VERSION: v5
        volumes:
            - '/var/whalebone/:/var/whalebone/'
        network_mode: host
        mem_limit: 2g
        memswap_limit: 2g
        mem_swappiness: 0
        restart: always
        logging:
            driver: json-file
            options:
                max-size: 100m
                max-file: '1'





status: {}






