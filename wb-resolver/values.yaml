
namespace: resolver
deployment_id: dev1
resolver_external_ip: "34.71.254.102"
replicacount: 1

certificates:
  ca_crt_base64: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVCekNDQXUrZ0F3SUJBZ0lVUCtJKzF1SUpsVFd1OGtGV09hdVFaQlVLMXdRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daSXhDekFKQmdOVkJBWVRBa05hTVJjd0ZRWURWUVFJREE1RGVtVmphQ0JTWlhCMVlteHBZekVYTUJVRwpBMVVFQnd3T1EzcGxZMmdnVW1Wd2RXSnNhV014R2pBWUJnTlZCQW9NRVZkb1lXeGxZbTl1WlN3Z2N5NXlMbTh1Ck1SSXdFQVlEVlFRTERBbFhhR0ZzWldKdmJtVXhJVEFmQmdOVkJBTU1HSEp2YjNSRFFTNWtaWFl4TG5kb1lXeGwKWW05dVpTNXBiekFlRncweU1UQTNNREV4TWpVeE1qSmFGdzAwTVRBMk1qWXhNalV4TWpKYU1JR1NNUXN3Q1FZRApWUVFHRXdKRFdqRVhNQlVHQTFVRUNBd09RM3BsWTJnZ1VtVndkV0pzYVdNeEZ6QVZCZ05WQkFjTURrTjZaV05vCklGSmxjSFZpYkdsak1Sb3dHQVlEVlFRS0RCRlhhR0ZzWldKdmJtVXNJSE11Y2k1dkxqRVNNQkFHQTFVRUN3d0oKVjJoaGJHVmliMjVsTVNFd0h3WURWUVFEREJoeWIyOTBRMEV1WkdWMk1TNTNhR0ZzWldKdmJtVXVhVzh3Z2dFaQpNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURETS9tNFdpazRrMnJZWFpCU0NGamVHOGpoCjJHeG54RlYycVNERDluM2RLK3JtQ2tyUU9USFpSNmRqaTMyRDJlUU1nRlBVODhBdUhqM3ZIeHI1SDFGUlNuaGQKRWtKZWwwcFlNc21PMGs5MExWKy91VXZ2cVRpMDlQUmk0TkRlSXk4TUdGQTlWUXBHaHBCbkI5ckVvcC9yaHU3QgpJenR1dUdpNFp0dHIzcXhBT1J4a0pOdzRZYSszclYxbUJoY0pXbGVRNUdqeFZTdGRPaWJybUV3QWFWcEY1a2IrCmRUUmpiUjJKZnZoMUc2MDEzdmlCcnFOR2ZndFBHak1vWDBKVUNWTWIyV0hid0ZDUW1zNVdOMkVxY1NHWGhGdEoKNWN1WlJobGtTUzBVRUZ4SWMwNXNSanBBYmV3cUVycGsxYWVRUExaU29GUDhqdS9ZRmFOaHF0QVJYT1U3QWdNQgpBQUdqVXpCUk1CMEdBMVVkRGdRV0JCUUVudzlyZG41VXRKYlhTODNsUTRDZXRDMlVtakFmQmdOVkhTTUVHREFXCmdCUUVudzlyZG41VXRKYlhTODNsUTRDZXRDMlVtakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDWDFkd2x6VXJJQW4zWlFLN2htQi9BN2k3dFJKTGhaQVJFUUVYbWFkY0M2aSsvdno3YQptMW8wMU40ajBseDViL1NDWU5abzA3bHdacE1ZOVdWQW1IckJzRzRGbGFMSTk2T2cyR3RCL3VCaW8rdTA4RTRFClJ5aDFPeVZyOEhKbTZtN0FqQm1wRW9Ec0R6ZTFpUzhhd3I4YnQ4cHp3Y3RTdHpYNFJrYmJkRG5VeU05QmdmSGEKOEJESTgvN3dhQTQyTmUyaWpBMmlEdjAxc2cweWxzYmIxb0ZKVXFMQ1FhaGIvV0JxeHFNUjR0NG9WVDl4TzVpYQplZHdZQWpYWTZmYWxBaHIxd01vVXdkRVhRMThWS0RkTVozS3dHaE01TDNVUzUrMEpoNUVoWStCQVhWYlZMMXNZClFDaEg3WEtYSXFkS0JnZjI1V2N1dlE1UkZOdXd4WDVpVUZORQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  client_crt_base64: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ3akNDQXRhZ0F3SUJBZ0lVY1ZNczhBcHZ3cVZCRFhhOHRRT245cnNPVTNBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daSXhDekFKQmdOVkJBWVRBa05hTVJjd0ZRWURWUVFJREE1RGVtVmphQ0JTWlhCMVlteHBZekVYTUJVRwpBMVVFQnd3T1EzcGxZMmdnVW1Wd2RXSnNhV014R2pBWUJnTlZCQW9NRVZkb1lXeGxZbTl1WlN3Z2N5NXlMbTh1Ck1SSXdFQVlEVlFRTERBbFhhR0ZzWldKdmJtVXhJVEFmQmdOVkJBTU1HSEp2YjNSRFFTNWtaWFl4TG5kb1lXeGwKWW05dVpTNXBiekFlRncweU1URXdNRFl3T1RJNE1EQmFGdzB6TVRFd01EUXdPVEk0TURCYU1ENHhDekFKQmdOVgpCQVlUQWtOYU1Rb3dDQVlEVlFRSEV3RTBNUll3RkFZRFZRUUtFdzFVWlhOMFdtRnJZWHB1YVdzeE1Rc3dDUVlEClZRUURFd0l4TURDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTW1VSFhPTGlaN0UKV3FnbHRSWmRlNDY5SFMraWMrR21IWXJtenhZRlJlRmpuMTQ2TlZaMFRrSkdvcndpOEsxcVllb2pNUlY2NUpTQQpkcVg0dUpwY0lRVC9ZMDBBZHNXMEhaY2FCMzV1OGpISzZhZ2V5YURYUnZudTRGNldGSzc0RkZ4eWk4Y3p2d0ljCm1YTmFIVE9PTERaWkZLQ2dHNzVNU1NPSmplOFpYbGlacGlGazZnakVRM0pBZGpUT2xvY0haVldTVkthV2tOa04KN2JtSDdheGRqN3NJM3ZibVlYVmg3ZklCVFlJbzQyeHd1b040Qk9sRXROYlM0MXBJaG84N0RsTERlZ3RKamFmOAo1NWJ6UjhQeXJDN1pBUEhKOE1QOTJ3YkhlWnNHOWpWVGs1cm1VZS84c1h6dW1Wd082QzlzQ1BBUTFHbFNUajZoCm5IS3o0ZkFtZHRjQ0F3RUFBYU9CampDQml6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsQkF3d0NnWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVJR2xNdTVMNkpiSzZNMmZEUlpaQwp4YjhIelJFd0h3WURWUjBqQkJnd0ZvQVVCSjhQYTNaK1ZMU1cxMHZONVVPQW5yUXRsSm93RmdZRFZSMFJCQTh3CkRZSUxaR1YyTVMxbVluUmxjM1F3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUd6aHZENFB6bm05N2tLL3NCcWMKOUZwLzd3V0c5eGlEMzR5d0lhRVBOQmZJSE5LUksvbUdITXo5U2pwenhXa3VXVnBTUzJHNkdwSVJGZDFaTUZCMQpjUy8wM3ZUYmV3eERWRXprcU9JTTJFdEZsRWdvaFROUWNQMG9GWlk2QkNmellHVmJmYzBlOGhmQmR4UXI1VDh4CnMwQnkzWFdGZVZFbUMzcGR2ZzRENUdGSE1uL0F2VUovUDJzckRYMlZCeDdKVkZnamNsemloekFrQitxTkVrK2kKb0NURkV5TGNpS3VpTHg5Ti9BZ29yQjFtZHRGM1dxSkZFdmFiOEtONXh1TmQwOEE2Q212ZGgrRHk2TFVnZmtXYwpCbTNPT1AwY0M4ZjhMM0E1RTMyeXd4MVJ2dlR5eVVWOWFoR0d6QjZxakRCU21FYVI3NE0wbFVjSFNDb2FpN0E2CmZSUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  client_key_base64: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeVpRZGM0dUpuc1JhcUNXMUZsMTdqcjBkTDZKejRhWWRpdWJQRmdWRjRXT2ZYam8xClZuUk9Ra2FpdkNMd3JXcGg2aU14Rlhya2xJQjJwZmk0bWx3aEJQOWpUUUIyeGJRZGx4b0hmbTd5TWNycHFCN0oKb05kRytlN2dYcFlVcnZnVVhIS0x4ek8vQWh5WmMxb2RNNDRzTmxrVW9LQWJ2a3hKSTRtTjd4bGVXSm1tSVdUcQpDTVJEY2tCMk5NNldod2RsVlpKVXBwYVEyUTN0dVlmdHJGMlB1d2plOXVaaGRXSHQ4Z0ZOZ2lqamJIQzZnM2dFCjZVUzAxdExqV2tpR2p6c09Vc042QzBtTnAvem5sdk5Idy9Lc0x0a0E4Y253dy8zYkJzZDVtd2IyTlZPVG11WlIKNy95eGZPNlpYQTdvTDJ3SThCRFVhVkpPUHFHY2NyUGg4Q1oyMXdJREFRQUJBb0lCQUgxS0lGd1cyTHpqMG0wOApzcWRxQjBnYTV5OGFTK2h1dFdJR1A2U3lObEwyOXJFOGdMWnhwOHF0Mkt3VEU0RFY1SElBMlpzK1BTRElEL2JzCjl1Q0tic09LY1JBRlA4MTJQQVlVMlorT0dkODAvYkhQSVFkbGh1b0Z2Vk5NK1NJZmM1aGFZZUs0bVBvWkNJK1gKN1JxRVBacXlGNDRXdGVlN3hxSGQ5MmdyWG1hMlR3emcvZnI4Q3VWOGtWemwrWU53QTUxN0RKb3VMNGNEWmVqbwo0Z1liQlo4ZDMxTm9rcDVrd2czMk9YQUh0SklLZHh6YzhiM3JHbzVLZlZRTTFDR1RHUHNjKzUyaWVlb3BJN3JmCnpNb3lVZDBZQTFtbHUxRTBJWUd0SExMVzYydnRCSlNZTFV5cWFHNHJFaVh2NStOQ011cngyNUxEaG80S0NuVW8KYVlsQlZhRUNnWUVBNXRETklqVk1qZU5FMEMvQWd1NzEvQ0VsK2VPakRpcnA0STQvZEZzQVU3R3BXbFNmMWVyTQoxb2M4cE5MSmJ0Z3MrZ2RGcGJ2Z2pSYVNIWmp5QUxsb0pHMnpIVWZDYjFDUUVRZDJ3dmNReHFzeUxjb0RJWVk4Ck9MdFFCNnorbVRkbzdkcTNRN0JaMTJEcEZROHJmdnpraEhiTGVwaG9qbWxabS9ZbEFaWDVvNzhDZ1lFQTM1S28KT252YjdPZURKMExjMXYwQXZNVGR0NDJtOXdiMmJuUTBtOE9qWDR0T1FmSUhXOWplUkhZS2lTV2VQNE5RallWSQp0MTc4RFl3MWxwRUZPUndBNEZRRGlYdE53VHgrdG1JRGNMYnFzZGhvVnZ3aEJycWk2UFg5dUpoVEhJNVpKMjVnCnNWU2tNS1ZWRVBVblprL0tUMVg3M2YzUkJHT2M1R1lxcUJUVEV1a0NnWUVBa1NpLzJjT3JZWkNNdG1GUnNRYVgKclBrcjZQeEFqNmh0YmN3SUhDVWZENE9yL2lNNllrNUloS0tJZ1NBUGpxWmxvdGp2OUVzejdZZEVYVmpTMmFIQQozU2dnZlVtai9sMnNQUWwwcHlpNlpEZEdWNFcwY21ENWZyUk9vSVVybVRBL3pWYS82dEg5cm5aRUgvcHFZSEtyClJLTnhWS2lGR1Fzb1QrMTlXSUg1ZmdFQ2dZQmYrZTlxRzkzUGw1cy84WDRvZExncVVVRDFHVVJCNjZWQ3lYUUUKSWpveU8vVStiZzRtcWJUUkl2Tm02TlZFWXJUajdBSEpabWRCMFp6M3BBM2Y5RnVUOGIwSytmbnBLSFVsQ25KNwpvcXFoNmtyd2ZKQVkrV29TSS9mbGxNNnBCWnJVU0pnTnlFNHI2KzNXdDhkUUxwU2s5ajZIai94NHErS2dVaE9oCjBEN0VjUUtCZ1FDTjRLYmFjdkNBYi9Hc3RNM1luSVpCY3FKNG0xTzJWMkRnbU1qdXR3cGZPcm11Um9DZ3hLYVgKTEVRUjNOOUpMRm03NVU4Z09wNFp4dDI4M3hIM1FaVGtBczlBMDNxckZPeUh3QUFrSjB2cTRWd0tYWnhQbkVoZQpzTUE1SXExYjczdHJIYy80SUxkdC9LeG1Ibmdra2ZuOUlYWGlSeC9EcnphMndoQ2JsalUzaGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="

resolver:
  image: "harbor.whalebone.io/resolver/kres"
  tag: "5.3.2-4-17"

logstream:
  image: "harbor.whalebone.io/resolver/logstream"
  tag: "7.13.2"

kresman:
  image: "harbor.whalebone.io/resolver/kresman"
  tag: "4.0.5"

logcat:
  image: "harbor.whalebone.io/resolver/logcat"
  tag: "7.13.2"

logcat_content:
  image: "harbor.whalebone.io/resolver/logcat"
  tag: "7.13.2"

logrotate: 
  image: "harbor.whalebone.io/resolver/logrotate"
  tag: "1.2"

passivedns:
  image: "harbor.whalebone.io/resolver/passivedns"
  tag: "1.1.3"

lr_agent:
  image: "harbor.whalebone.io/resolver/agent"
  tag: "1.5.6"

# # Default values for test1.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

# replicaCount: 1

# image:
#   repository: nginx
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# podAnnotations: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# nodeSelector: {}

# tolerations: []

# affinity: {}
